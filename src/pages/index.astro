---
import Layout from '../layouts/Layout.astro';
import LiveDashboard from '../components/LiveDashboard';
import { seriesInfoData } from '../data/seriesInfoData';
import { getGameImage } from '../data/gameImages';
import { getDefaultAvatar } from '../lib/speedruncom';
import { runnerData } from '../data/runnerData';

---

<Layout title="FF Series Relay Race X - Live Dashboard">
  <style is:global>
    :root {
      --color-primary: #1a1f36;
      --color-secondary: #2a3f5f;
      --color-accent: #d4af37;
      --color-text: #e8e6e3;
      --color-background: #0a0e1a;
      --color-surface: #151b2e;
      --color-mog: #ff6b6b;
      --color-choco: #4ecdc4;
      --color-tonberry: #95e1d3;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
      font-size: 14px;
      line-height: 1.4;
      color: var(--color-text);
      background: var(--color-background);
      padding: 0;
      margin: 0;
    }

    h1, h2, h3, h4, h5, h6 {
      margin: 0 0 0.5rem 0;
      line-height: 1.2;
      font-weight: 600;
    }

    h1 { font-size: 1.75rem; }
    h2 { font-size: 1.25rem; }
    h3 { font-size: 1rem; }
    h4 { font-size: 0.875rem; }

    a {
      color: var(--color-accent);
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    section {
      padding: 0;
    }

    .container {
      max-width: 100%;
      margin: 0;
      padding: 0;
    }
  </style>

  <main class="dashboard-layout">
    <header class="dashboard-header">
      <div class="header-content">
        <h1>FF Series Relay Race X</h1>
        <div class="event-info">
          <span>August 1-4, 2025</span>
          <span class="divider">|</span>
          <span>9am EDT / 3pm CEST / 10pm JST</span>
          <span class="divider">|</span>
          <a href="http://twitch.tv/RPGLimitBreak" target="_blank" class="stream-link">Watch Live</a>
          <span class="divider">|</span>
          <a href="https://www.twitch.tv/japanese_restream" target="_blank" class="stream-link">JP Stream</a>
          <span class="divider">|</span>
          <span class="last-update-label" id="lastUpdateLabel"></span>
        </div>
        <nav class="header-nav">
          <span class="event-tagline">The ultimate Final Fantasy speedrunning competition</span>
        </nav>
      </div>
    </header>

    <div class="live-dashboard-container">
      <LiveDashboard client:only="react" />
    </div>

    <div class="series-content">
      {seriesInfoData.eventHistory.events.length > 0 && (
        <div class="history-section">
          <div class="section-divider">
            <h3 class="section-heading">Event History</h3>
          </div>
          {seriesInfoData.eventHistory.description && (
            <div class="content-block">
              <p class="content-paragraph">{seriesInfoData.eventHistory.description}</p>
            </div>
          )}
          <div class="table-wrapper">
            <table>
              <thead>
                <tr>
                  <th>Event</th>
                  <th>Date</th>
                  <th># Teams</th>
                  <th>Winner</th>
                  <th>VoD Playlist</th>
                </tr>
              </thead>
              <tbody>
                {seriesInfoData.eventHistory.events.map((event) => (
                  <tr>
                    <td class="event-name">{event.name}</td>
                    <td>{event.date}</td>
                    <td class="center">{event.teams}</td>
                    <td class={`winner ${event.winner.toLowerCase().includes('mog') ? 'team-mog' : event.winner.toLowerCase().includes('choco') ? 'team-choco' : event.winner.toLowerCase().includes('tonberry') ? 'team-tonberry' : ''}`}>{event.winner}</td>
                    <td class="center">
                      <a href={event.vodLink} class="table-link" target="_blank" rel="noopener noreferrer">Watch</a>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {seriesInfoData.gameHistory && seriesInfoData.gameHistory.length > 0 && (
        <div class="game-history-section">
          <div class="section-divider">
            <h3 class="section-heading">Complete Game History</h3>
          </div>
          <div class="content-block">
            <p class="content-paragraph">Every Final Fantasy game that has been featured across all relay races, showing platforms used and total appearances.</p>
          </div>
          <div class="game-history-grid">
            {seriesInfoData.gameHistory.map((game, index) => (
              <div class="game-card" style={`animation-delay: ${index * 0.02}s; background-image: url(${getGameImage(game.game)})`}>
                <div class="game-card-overlay">
                  <span class="times-played">{game.timesPlayed}x</span>
                  <div class="game-info">
                    <h4 class="game-title">{game.game}</h4>
                    <div class="relay-badges">
                      {game.relays.map((relay) => (
                        <span class="relay-badge-compact" title={`${relay.relayName} - ${relay.platform}`}>
                          {relay.relayName.replace('Relay ', '')}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {seriesInfoData.runnerHistory && seriesInfoData.runnerHistory.length > 0 && (
        <div class="runner-history-section">
          <div class="section-divider">
            <h3 class="section-heading">Complete Runner History</h3>
          </div>
          <div class="content-block">
            <p class="content-paragraph">All speedrunners who have participated in the Final Fantasy Series Relay Race, their run counts, and game history.</p>
          </div>
          <div class="runner-stats">
            <div class="stat-card">
              <h4>Total Runners</h4>
              <span class="stat-number">{seriesInfoData.runnerHistory.length}</span>
            </div>
            <div class="stat-card">
              <h4>Most Runs</h4>
              <span class="stat-number">{Math.max(...seriesInfoData.runnerHistory.map(r => r.runCount))}</span>
            </div>
            <div class="stat-card">
              <h4>Total Runs</h4>
              <span class="stat-number">{seriesInfoData.runnerHistory.reduce((sum, r) => sum + r.runCount, 0)}</span>
            </div>
          </div>
          <div class="runner-grid">
            {seriesInfoData.runnerHistory
              .sort((a, b) => b.runCount - a.runCount)
              .map((runner, index) => {
                const runnerInfo = runnerData[runner.name as keyof typeof runnerData];
                const avatarUrl = getDefaultAvatar(runner.name);
                const countryFlag = runnerInfo?.flag || '';
                
                return (
                  <div class="runner-card" style={`animation-delay: ${index * 0.02}s`} data-runner-id={runner.name}>
                    <span class="run-count">{runner.runCount}x</span>
                    <div class="runner-header">
                      <img 
                        src={avatarUrl}
                        alt={`${runner.name} avatar`} 
                        class="runner-avatar" 
                      />
                      <div class="runner-info">
                        <div class="runner-name-row">
                          <h4 class="runner-name" title={runner.name}>
                            {runnerInfo?.speedrunProfile ? (
                              <a href={`https://www.speedrun.com/users/${runnerInfo.speedrunProfile}`} 
                                 target="_blank" 
                                 rel="noopener noreferrer"
                                 class="runner-name-link"
                                 onclick="event.stopPropagation()">
                                {runner.name}
                              </a>
                            ) : (
                              runner.name
                            )}
                          </h4>
                          {countryFlag && <span class="country-flag">{countryFlag}</span>}
                        </div>
                      </div>
                    </div>
                    <div class="runner-expanded">
                      <div class="runner-relays">
                        {runner.relayParticipation.map((relay) => (
                          <div class="relay-participation">
                            <span class="relay-label">{relay.relayName}:</span>
                            <span class="games-list">{relay.games.join(', ')}</span>
                          </div>
                        ))}
                      </div>
                      {runnerInfo?.speedrunProfile && (
                        <div class="runner-profile-link">
                          <a href={`https://www.speedrun.com/users/${runnerInfo.speedrunProfile}`} 
                             target="_blank" 
                             rel="noopener noreferrer"
                             class="speedrun-profile-btn">
                            View speedrun.com profile â†’
                          </a>
                        </div>
                      )}
                    </div>
                  </div>
                );
              })}
          </div>
        </div>
      )}
    </div>

    <footer class="dashboard-footer">
      <details class="past-events">
        <summary>Past Events Archive</summary>
        <div class="past-events-grid">
          <a href="https://bit.ly/ffrelay1" target="_blank">Relay I</a>
          <a href="https://bit.ly/ffrelay2" target="_blank">Relay II</a>
          <a href="https://bit.ly/ffrelay3" target="_blank">Relay III</a>
          <a href="https://bit.ly/ffrelay4" target="_blank">Relay IV</a>
          <a href="https://bit.ly/ffrelay4interlude" target="_blank">Relay IV - Interlude</a>
          <a href="https://bit.ly/ffrelay5" target="_blank">Relay V</a>
          <a href="https://bit.ly/ffrelay6" target="_blank">Relay VI</a>
          <a href="https://bit.ly/ffrelay7" target="_blank">Relay VII</a>
          <a href="https://bit.ly/ffrelay8" target="_blank">Relay VIII</a>
          <a href="https://bit.ly/ffrelay9" target="_blank">Relay IX</a>
        </div>
      </details>
      <div class="footer-info">
        <span>Static data build â€¢ Last updated: {new Date().toLocaleDateString()}</span>
      </div>
    </footer>
  </main>
</Layout>

<script>
  function updateLastUpdateTime(date) {
    const label = document.getElementById('lastUpdateLabel');
    if (label && date) {
      label.textContent = `Last update: ${date.toLocaleTimeString()}`;
    }
  }

  window.updateLastUpdateTime = updateLastUpdateTime;

  document.addEventListener('DOMContentLoaded', () => {
    const runnerCards = document.querySelectorAll('.runner-card');
    
    runnerCards.forEach(card => {
      card.addEventListener('click', (e) => {
        if ((e.target as HTMLElement).tagName === 'A') return;
        
        card.classList.toggle('expanded');
      });
    });
  });
</script>

<style>
  .dashboard-layout {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background: var(--color-background);
  }

  .dashboard-header {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-secondary) 100%);
    border-bottom: 2px solid var(--color-accent);
    padding: 1rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .header-content {
    text-align: center;
  }

  .dashboard-header h1 {
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.5rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  }

  .event-info {
    font-size: 0.875rem;
    color: rgba(232, 230, 227, 0.9);
  }

  .divider {
    margin: 0 0.5rem;
    color: rgba(212, 175, 55, 0.5);
  }

  .stream-link {
    color: var(--color-accent);
    font-weight: 600;
  }

  .header-nav {
    margin-top: 1rem;
  }

  .event-tagline {
    color: rgba(232, 230, 227, 0.9);
    font-size: 0.875rem;
    font-style: italic;
  }

  .last-update-label {
    color: rgba(232, 230, 227, 0.7);
    font-size: 0.75rem;
  }

  .live-dashboard-container {
    flex: 1;
    padding: 1rem;
    overflow-y: auto;
    background: var(--color-background);
  }

  .dashboard-footer {
    background: var(--color-surface);
    border-top: 1px solid rgba(212, 175, 55, 0.3);
    padding: 1rem;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out 0.2s, transform 0.6s ease-out 0.2s;
  }
  
  body.dashboard-loaded .dashboard-footer {
    opacity: 1;
    transform: translateY(0);
  }

  .past-events {
    margin-bottom: 1rem;
  }

  .past-events summary {
    cursor: pointer;
    font-weight: 600;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.03em;
    font-size: 0.875rem;
    padding: 0.5rem;
    background: rgba(26, 31, 54, 0.5);
    border-radius: 4px;
  }

  .past-events-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 0.5rem;
    margin-top: 0.5rem;
    padding: 0.5rem;
  }

  .past-events-grid a {
    padding: 0.4rem;
    background: rgba(26, 31, 54, 0.5);
    border-radius: 4px;
    text-align: center;
    font-size: 0.75rem;
    transition: all 0.2s;
    border: 1px solid transparent;
  }

  .past-events-grid a:hover {
    background: rgba(212, 175, 55, 0.2);
    border-color: var(--color-accent);
    transform: translateY(-1px);
  }

  .footer-info {
    text-align: center;
    font-size: 0.75rem;
    color: rgba(232, 230, 227, 0.7);
  }

  @media (max-width: 768px) {
    .dashboard-header h1 {
      font-size: 1.5rem;
    }

    .event-info {
      font-size: 0.75rem;
    }

    .live-dashboard-container {
      padding: 0.5rem;
      padding-bottom: 0;
    }
    
    .dashboard-layout {
      min-height: 100vh;
      overflow-x: hidden;
    }
  }

  @media (min-width: 1400px) {
    .live-dashboard-container {
      max-width: 1600px;
      margin: 0 auto;
    }
  }

  .series-content {
    padding: 1.5rem 1rem;
    max-width: 1400px;
    margin: 0 auto;
    width: 100%;
    background: var(--color-background);
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  
  body.dashboard-loaded .series-content {
    opacity: 1;
    transform: translateY(0);
  }

  .section-divider {
    margin: 1rem 0 0.5rem;
    text-align: center;
  }

  .section-heading {
    display: inline-block;
    color: var(--color-accent);
    font-size: 1.25rem;
    text-transform: uppercase;
    letter-spacing: 0.03em;
    padding: 0.25rem 1rem;
    border-bottom: 2px solid var(--color-accent);
    position: relative;
    background: linear-gradient(to right, transparent, rgba(212, 175, 55, 0.1), transparent);
  }

  .content-block {
    background: var(--color-surface);
    border: 1px solid rgba(212, 175, 55, 0.15);
    border-radius: 4px;
    padding: 0.75rem;
    margin-bottom: 0.75rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .content-paragraph {
    color: var(--color-text);
    font-size: 0.875rem;
    line-height: 1.6;
    margin: 0;
  }

  .table-wrapper {
    overflow-x: auto;
    margin: 0.75rem 0;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background: var(--color-surface);
    border: 1px solid rgba(212, 175, 55, 0.15);
  }

  table {
    width: 100%;
    border-collapse: collapse;
    font-size: 1rem;
  }

  thead {
    background: rgba(212, 175, 55, 0.2);
  }

  th {
    padding: 0.5rem;
    text-align: left;
    color: var(--color-accent);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.03em;
    border-bottom: 2px solid rgba(212, 175, 55, 0.3);
    font-size: 0.75rem;
  }

  td {
    padding: 0.375rem 0.5rem;
    text-align: left;
    border-bottom: 1px solid rgba(212, 175, 55, 0.1);
    color: var(--color-text);
    font-size: 0.875rem;
  }

  td.center {
    text-align: center;
  }

  td.event-name {
    font-weight: 600;
    color: var(--color-accent);
  }

  td.winner {
    font-weight: 600;
  }
  
  .team-mog {
    color: #ff6b6b;
  }
  
  .team-choco {
    color: #4ecdc4;
  }
  
  .team-tonberry {
    color: #95e1d3;
  }

  .table-link {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .table-link:hover {
    color: var(--color-text);
    text-decoration: underline;
  }

  tbody tr:hover {
    background: rgba(212, 175, 55, 0.05);
  }

  tbody tr:last-child td {
    border-bottom: none;
  }

  .game-history-section {
    margin-top: 2rem;
  }

  .game-history-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 0.75rem;
    margin-top: 1rem;
  }

  .game-card {
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    animation: fadeInUp 0.3s ease-out;
    animation-fill-mode: both;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    height: 220px;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-color: var(--color-surface);
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .game-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4), 0 0 0 2px var(--color-accent);
    z-index: 10;
  }

  .game-card-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    background: linear-gradient(to bottom, 
      transparent 0%, 
      transparent 30%,
      rgba(0, 0, 0, 0.4) 50%, 
      rgba(0, 0, 0, 0.7) 70%, 
      rgba(0, 0, 0, 0.95) 100%
    );
    padding: 1rem;
    transition: all 0.2s ease;
    border-radius: 8px;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }

  .game-card:hover .game-card-overlay {
    background: linear-gradient(to bottom, 
      transparent 0%, 
      transparent 25%,
      rgba(0, 0, 0, 0.5) 45%, 
      rgba(0, 0, 0, 0.8) 70%, 
      rgba(0, 0, 0, 0.98) 100%
    );
  }

  .game-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .game-title {
    color: #ffffff;
    font-size: 0.875rem;
    margin: 0;
    font-weight: 700;
    line-height: 1.2;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .times-played {
    background: rgba(212, 175, 55, 0.9);
    color: #0a0e1a;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-weight: 700;
    font-size: 0.75rem;
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    z-index: 5;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .relay-badges {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
  }

  .relay-badge-compact {
    background: rgba(212, 175, 55, 0.2);
    color: var(--color-accent);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.625rem;
    font-weight: 600;
    line-height: 1;
    border: 1px solid rgba(212, 175, 55, 0.4);
    white-space: nowrap;
    backdrop-filter: blur(4px);
  }

  .runner-history-section {
    margin-top: 2rem;
  }

  .runner-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin: 1rem 0;
  }

  .stat-card {
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.1) 0%, rgba(212, 175, 55, 0.05) 100%);
    border: 1px solid var(--color-accent);
    border-radius: 4px;
    padding: 0.75rem;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .stat-card h4 {
    color: var(--color-text);
    font-size: 0.75rem;
    margin-bottom: 0.25rem;
    text-transform: uppercase;
    letter-spacing: 0.03em;
  }

  .stat-number {
    color: var(--color-accent);
    font-size: 1.75rem;
    font-weight: 700;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  }

  .runner-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .runner-card {
    background: var(--color-surface);
    border: 1px solid rgba(212, 175, 55, 0.15);
    border-radius: 4px;
    padding: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    animation: fadeInUp 0.3s ease-out;
    animation-fill-mode: both;
    cursor: pointer;
    position: relative;
  }

  .runner-card:hover {
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
    border-color: var(--color-accent);
    z-index: 10;
  }

  .runner-card.expanded {
    z-index: 20;
  }

  .runner-card.expanded .runner-expanded {
    max-height: 300px;
    opacity: 1;
    padding-top: 0.5rem;
  }

  .runner-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .runner-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
    background: rgba(212, 175, 55, 0.2);
    border: 1px solid rgba(212, 175, 55, 0.3);
  }

  .runner-info {
    flex: 1;
    min-width: 0;
  }

  .runner-name-row {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .runner-name {
    color: var(--color-accent);
    font-size: 0.875rem;
    margin: 0;
    font-weight: 600;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .country-flag {
    font-size: 0.875rem;
    line-height: 1;
  }

  .run-count {
    background: rgba(255, 107, 107, 0.2);
    color: #ff6b6b;
    padding: 0.125rem 0.375rem;
    border-radius: 3px;
    font-size: 0.625rem;
    font-weight: 700;
    position: absolute;
    top: 0.25rem;
    right: 0.25rem;
  }

  .runner-expanded {
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    transition: all 0.3s ease;
    border-top: 1px solid rgba(212, 175, 55, 0.1);
    margin-top: 0.5rem;
  }

  .runner-relays {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .relay-participation {
    font-size: 0.625rem;
    display: flex;
    gap: 0.25rem;
    align-items: flex-start;
  }

  .relay-label {
    color: rgba(232, 230, 227, 0.7);
    font-weight: 600;
    white-space: nowrap;
    min-width: 50px;
  }

  .games-list {
    color: var(--color-text);
    flex: 1;
    line-height: 1.3;
  }

  .runner-name-link {
    color: inherit;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .runner-name-link:hover {
    color: #fff;
    text-decoration: underline;
  }

  .runner-profile-link {
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid rgba(212, 175, 55, 0.1);
  }

  .speedrun-profile-btn {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    background: rgba(212, 175, 55, 0.2);
    color: var(--color-accent);
    border: 1px solid rgba(212, 175, 55, 0.4);
    border-radius: 3px;
    font-size: 0.625rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .speedrun-profile-btn:hover {
    background: rgba(212, 175, 55, 0.3);
    border-color: var(--color-accent);
    transform: translateX(2px);
  }


  @media (max-width: 768px) {
    .series-content {
      padding: 0.5rem;
      padding-top: 0;
    }

    .section-heading {
      font-size: 1rem;
      padding: 0.25rem 0.5rem;
    }

    .content-block {
      padding: 0.5rem;
    }

    .content-paragraph {
      font-size: 0.75rem;
    }

    .game-history-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 0.5rem;
    }

    .runner-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.5rem;
    }

    .game-card {
      height: 150px;
    }
    
    .game-card-overlay {
      padding: 0.75rem;
    }

    .game-title {
      font-size: 0.75rem;
    }

    .times-played {
      font-size: 0.625rem;
      padding: 0.2rem 0.4rem;
    }

    .relay-badge-compact {
      font-size: 0.45rem;
      padding: 0.1rem 0.2rem;
    }

    .runner-avatar {
      width: 24px;
      height: 24px;
    }

    .runner-stats {
      grid-template-columns: repeat(3, 1fr);
      gap: 0.5rem;
    }

    .stat-card {
      padding: 0.5rem;
    }

    .stat-number {
      font-size: 1.25rem;
    }

    .skeleton-standings {
      gap: 0.25rem;
    }

    .skeleton-team {
      padding: 0.5rem;
    }

    .skeleton-text-large {
      font-size: 1rem;
    }

    .skeleton-image {
      width: 40px;
      height: 40px;
    }

    .skeleton-schedule {
      margin-bottom: 0.5rem;
    }
  }
</style>